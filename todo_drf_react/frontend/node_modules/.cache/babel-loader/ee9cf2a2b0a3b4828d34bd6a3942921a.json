{"ast":null,"code":"var _jsxFileName = \"/home/vlad/Desktop/todo_drf_react/frontend/src/components/ToDo.js\";\nimport React from 'react';\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToDo = _ref => {\n  let {\n    id,\n    title,\n    description,\n    doneToDo,\n    destroyToDo,\n    updateToDo\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"border border-radius rounded m-2\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 1,\n        className: \"my-auto\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            onChange: () => doneToDo(id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"text-center my-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        className: \"text-end\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"btn btn-outline-dark\",\n            className: \"my-1\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"btn btn-outline-danger\",\n            className: \"my-1\",\n            onClick: () => destroyToDo(id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Edit ToDo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: newTitle,\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              placeholder: \"\",\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/home/vlad/Desktop/todo_drf_react/frontend/src/components/ToDo.js"],"names":["React","Form","Row","Col","Button","Modal","ToDo","id","title","description","doneToDo","destroyToDo","updateToDo","show","handleClose","newTitle","e","setTitle","target","value","setDescription"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\n\nconst ToDo = ({id, title, description, doneToDo, destroyToDo, updateToDo}) =>{\n\n    return (\n        <>\n            <Row className='border border-radius rounded m-2'>\n                <Col md={1} className='my-auto'>\n                    <Form>\n                        <Form.Check type='checkbox' onChange={() => doneToDo(id)}/>\n                    </Form>\n                </Col>\n                <Col className='text-center my-auto'>\n                    <h5>{title}</h5>\n                    <p>{description}</p>\n                </Col>\n                <Col md={3}  className='text-end'>\n                    <Form>\n                        <Button variant='btn btn-outline-dark' className='my-1'>Edit</Button>\n                    </Form>\n                    <Form>\n                        <Button variant='btn btn-outline-danger' className='my-1' onClick={() => destroyToDo(id)}>Delete</Button>\n                    </Form>\n                </Col>\n            </Row>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit ToDo</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n\n                    <Form>\n                    <Form.Group controlId='title'>\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control type='text' value={newTitle} onChange={e => setTitle(e.target.value)}/>\n                    </Form.Group>\n\n                    <Form.Group controlId='description'>\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as='textarea' placeholder='' onChange={e => setDescription(e.target.value)}/>\n                    </Form.Group>\n                    </Form>\n\n\n                </Modal.Body>\n            </Modal>\n        </>\n    )\n}\n\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}